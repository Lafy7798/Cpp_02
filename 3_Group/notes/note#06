가상함수 
-virtual 키워드로 선언된 멤버 함수
-동적 바인딩 지시어 
-컴파일러에게 함수에 대한 호출 바인딩을 실행 시간까지 미루도록 지시

함수 오버라이딩 
-파생 클래스에서 기본 클래스의 가상 함수와 동일한 이름의 함수 선언 
-기본 클래스의 가상 함수의 존재감 상실시킴
-다형성의 한 종류

**********페어 *************
오버라이딩의 목적에 대해서 둘이 이야기를 나누어봤다.
먼저는 오버라이딩을 사용하는 이유에 대해서 코드를 간소화하여서 
코드가 보기 쉽게함으로써 개발의 질을 높이기 위한 목적이라고 생각을 했고 ,
 점점 이야기를 더 나누면서 궁극적으로 도달한 결론은 
처음에 배운 객체지향의 다형성을 구현하기 위해서 오버라이딩을 사용한다고 서로 결론을 지었다
(서로 토의하며 이야기를 하면서 도출해 낸 결론입니다)
*************************************


오버라이딩의 목적 
- 파생 클래스에서 구현 할 함수 인터페이스 제공 (파생 클래스의 다형성)

*동적 바인딩 
-파생 클래스에 대해 
-기본 클래스에 대한 포인터로 가상 함수를 호출하는 경우
-객체 내에 오버라이딩한 파생 클래스의 함수를 찾아 실행 

c++ 오버라이딩 특징
-가상 함수 이름, 매개 변수 타입과 개수, 리턴 타입이 모두 일치

범위 지정 연산자
-정적 바인딩 지시
-기본클래스::가상함수()형태로 기본 클래스의 가상 함수를 정적바인딩으로 호출 

가상 소멸자
-소멸자를 virtual 키워드로 선언
-소멸자 호출 시 동적 바인딩 발생

추상 클래스 
-순수 가상 함수 
기본 클래스의 가상 함수 목적
 
추상 클래스 :최소한 하나의 순수 가상 함수를 가진 클래스

추상 클래스  특징
-온전한 클래스가 아니므로 객체 생성 불가능
-추상 클래스의 포인터는 선언 가능 

추상 클래스의 목적

-추상 클래스의 인스턴스를 생성할 목적 아님
-상속에서 기본 클래스의 역할을 하기 위함


